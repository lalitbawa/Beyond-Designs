AuthApi

export function createUser(userData) {
  return new Promise(async(resolve) =>{ 
    const response = await fetch("http://localhost:8080/users",{
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(userData)
    })
    const data = await response.json()
    resolve({data})
});
}


export function checkUser(loginData) {
  return new Promise(async (resolve, reject) => {
    const email = loginData.email;
    const password = loginData.password;
    const response = await fetch("http://localhost:8080/users?email=" + email);
    const data = await response.json();
    if (data.length) {
      if (data[0].password === password) {
        resolve({ data: data[0] });
      } else {
        reject(new Error("Password is incorrect"));
      }
    } else {
      reject(new Error("User not found"));
    }
  });
}

export function signOut(userId) {
  return new Promise(async (resolve) => {
    resolve({ data: 'success' });
  });
}


CartAPI

export function addToCart(item) {
  return new Promise(async (resolve) => {
    const response = await fetch('http://localhost:8080/cart', {
      method: 'POST',
      body: JSON.stringify(item),
      headers: { 'content-type': 'application/json' },
    });
    const data = await response.json();
    // TODO: on server it will only return some info of user (not password)
    resolve({ data });
  });
}

export function fetchItemsByUserId(userId) {
  return new Promise(async (resolve) => {
    
    const response = await fetch('http://localhost:8080/cart?user='+userId) 
    const data = await response.json()
    resolve({data})
  })
}

export function updateCart(update) {
  return new Promise(async (resolve) => {
    const response = await fetch(`http://localhost:8080/cart/${update.id}`, {
      method: 'PATCH',
      body: JSON.stringify(update),
      headers: { 'content-type': 'application/json' },
    });
    const data = await response.json();
    resolve({ data });
  });
}

export function deleteItemFromCart(itemId) {
  return new Promise(async (resolve) => {
    const response = await fetch(`http://localhost:8080/cart/${itemId}`, {
      method: 'DELETE',
      headers: { 'content-type': 'application/json' },
    });
    const data = await response.json();
    resolve({ data: { id: itemId } });
  });
}

export function createOrder(orderData) {
  return new Promise(async (resolve) => {
    const response = await fetch('http://localhost:8080/orders', {
      method: 'POST',
      body: JSON.stringify(orderData),
      headers: { 'content-type': 'application/json' },
    });
    const data = await response.json();
    resolve({ data });
  });
}

ProductApi


export function fetchAllProducts(amount = 1) {
  return new Promise(async(resolve) =>{ 
    const response = await fetch('http://localhost:8080/products')
    const data = await response.json()
    resolve({data})
});
}


UserApi

export function fetchUserOrders(userId) {
  return new Promise(async (resolve) => {
    const response = await fetch(`http://localhost:8080/orders?user=${userId}`);
    const data = await response.json();
    resolve({ data });
  });
}